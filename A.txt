1-> Lifecycle    

@Override
    protected void onStart() {
        super.onStart();
        Toast.makeText(getApplicationContext(), "Activity Started", Toast.LENGTH_SHORT).show();
    }

    @Override
    protected void onPause() {
        super.onPause();
        Toast.makeText(getApplicationContext(), "Activity Paused", Toast.LENGTH_SHORT).show();

    }

    @Override
    protected void onResume() {
        super.onResume();
        Toast.makeText(getApplicationContext(), "Activity Resumed", Toast.LENGTH_SHORT).show();
    }

    @Override
    protected void onStop() {
        super.onStop();
        Toast.makeText(getApplicationContext(), "Activity Stopped", Toast.LENGTH_SHORT).show();
    }

    @Override
    protected void onDestroy() {
        super.onDestroy();
        Toast.makeText(getApplicationContext(), "Activity Destroyed", Toast.LENGTH_SHORT).show();
    }

2 -> WebView

package com.example.imageview;


import androidx.annotation.Nullable;
import androidx.appcompat.app.AppCompatActivity;

import android.os.Bundle;
import android.os.PersistableBundle;
import android.webkit.WebView;
import android.widget.Toast;

public class MainActivity extends AppCompatActivity {
    WebView web1;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        web1 = (WebView) findViewById(R.id.webview);
        web1.loadUrl("https://www.youtube.com/");
        Toast.makeText(getApplicationContext(),"Application Creating",Toast.LENGTH_SHORT).show();

    }

IMPLIXIT INTENT

package com.example.implicitintent;

import androidx.appcompat.app.AppCompatActivity;

import android.content.Intent;
import android.net.Uri;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Toast;

public class MainActivity extends AppCompatActivity {

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        Button b1 = (Button) findViewById(R.id.call);
        EditText p = (EditText) findViewById(R.id.number);

        b1.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                String num = p.getText().toString();
                Intent it = new Intent(Intent.ACTION_DIAL);
                it.setData(Uri.parse("tel:"+num));
                Toast.makeText(MainActivity.this, "The number is dailing", Toast.LENGTH_SHORT).show();
                startActivity(it);
            }
        });
    }
}

<uses-permission android:name="android.permission.INTERNET"/>
<uses-permission android:name="android.permission.ANSWER_PHONE_CALLS"/>
<uses-permission android:name="android.permission.CALL_PHONE"/>



4 -> Database 

package com.example.database;

import androidx.appcompat.app.AlertDialog;
import androidx.appcompat.app.AppCompatActivity;

import android.annotation.SuppressLint;
import android.database.Cursor;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Toast;

public class MainActivity extends AppCompatActivity {
    EditText name,contact,age;
    Button insert,update,delete,view;
    DBHelper DB;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        name = findViewById(R.id.name);
        contact = findViewById(R.id.contact);
        age = findViewById(R.id.age);
        insert = findViewById(R.id.insert);
        delete = findViewById(R.id.delete);
        update = findViewById(R.id.update);
        view = findViewById(R.id.view);

        DB = new DBHelper(this);
        insert.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                String nameTXT = name.getText().toString();
                String contactTXT = contact.getText().toString();
                String ageTXT = age.getText().toString();
                boolean qrystatus = DB.insertData(nameTXT,contactTXT,ageTXT);
                if(qrystatus == true)
                {
                    Toast.makeText(MainActivity.this, "Inserted", Toast.LENGTH_SHORT).show();
                }
                else
                {
                    Toast.makeText(MainActivity.this,"Inserted Failed",Toast.LENGTH_LONG).show();
                }
            }
        });

        update.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                String nameTXT = name.getText().toString();
                String contactTXT = contact.getText().toString();
                String ageTXT = age.getText().toString();
                boolean qrystatus = DB.updateData(nameTXT,contactTXT,ageTXT);
                if(qrystatus == true)
                {
                    Toast.makeText(MainActivity.this, "Inserted", Toast.LENGTH_SHORT).show();
                }
                else
                {
                    Toast.makeText(MainActivity.this,"Inserted Failed",Toast.LENGTH_LONG).show();
                }
            }
        });

        delete.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                String NameTXT = name.getText().toString();
                boolean qrystatus = DB.deleteData(NameTXT);
                if(qrystatus == true)
                {
                    Toast.makeText(MainActivity.this, "Inserted", Toast.LENGTH_SHORT).show();
                }
                else
                {
                    Toast.makeText(MainActivity.this,"Inserted Failed",Toast.LENGTH_LONG).show();
                }
            }
        });

        view.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                Cursor res = DB.viewData();
                if(res.getCount() == 0)
                {
                    Toast.makeText(MainActivity.this,"No record Exists",Toast.LENGTH_SHORT).show();
                }
                else
                {
                    StringBuffer buffer = new StringBuffer();
                    while(res.moveToNext())
                    {
                        buffer.append("Name : " + res.getString(0) + "\n");
                        buffer.append("Contact : " + res.getString(1) + "\n");
                        buffer.append("Age : " + res.getString(2) + "\n");
                    }
                    AlertDialog.Builder builder = new AlertDialog.Builder(MainActivity.this);
                    builder.setCancelable(true);
                    builder.setTitle("User Data");
                    builder.setMessage(buffer.toString());
                    builder.show();
                }
            }
        });
    }
}

package com.example.database;

//import android.content.ContentValues;
//import android.content.Context;
//import android.database.Cursor;
//import android.database.DatabaseErrorHandler;
//import android.database.sqlite.SQLiteDatabase;
//import android.database.sqlite.SQLiteOpenHelper;
//
//import androidx.annotation.NonNull;
//import androidx.annotation.Nullable;


import android.content.ContentValues;
import android.content.Context;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteOpenHelper;

import androidx.annotation.Nullable;

public class DBHelper extends SQLiteOpenHelper{

    public DBHelper(@Nullable Context context) {
        super(context,"Userdata.db",null,1);
    }

    @Override
    public void onCreate(SQLiteDatabase db) {
        db.execSQL("create Table Userdetails(name TEXT primary key,contact TEXT,age TEXT)");
    }

    @Override
    public void onUpgrade(SQLiteDatabase db, int i, int i1) {
        db.execSQL("drop Table if exists Userdetails");
    }

    public boolean insertData(String name,String contact,String age) {
        SQLiteDatabase db = this.getWritableDatabase();
        ContentValues contentValues = new ContentValues();
        contentValues.put("name",name);
        contentValues.put("contact",contact);
        contentValues.put("age",age);

        long result = db.insert("Userdetails",null,contentValues);
        if(result == -1)
        {
            return false;
        }
        else
        {
            return true;
        }
    }

    public boolean updateData(String name,String contact,String age) {
        SQLiteDatabase db = this.getWritableDatabase();
        ContentValues contentValues = new ContentValues();
        contentValues.put("contact",contact);
        contentValues.put("age",age);
        Cursor cursor = db.rawQuery("Select * from Userdetails where name=?",new String[]{name});
        if(cursor.getCount() > 0){
            long result = db.update("Userdetails",contentValues,"name=?",new String[]{name});
            if(result == -1)
            {
                return false;
            }
            else
            {
                return true;
            }
        }
        else
        {
            return false;
        }
    }

    public boolean deleteData(String name) {
        SQLiteDatabase db = this.getWritableDatabase();
        ContentValues contentValues = new ContentValues();
        Cursor cursor = db.rawQuery("Select * from Userdetails where name=?", new String[]{name});
        if (cursor.getCount() > 0) {
            long result = db.delete("Userdetails", "name=?", new String[]{name});
            if (result == -1) {
                return false;
            } else {
                return true;
            }
        } else {
            return false;
        }
    }

    public Cursor viewData() {
        SQLiteDatabase db = this.getWritableDatabase();
        Cursor cursor = db.rawQuery("Select * from Userdetails",null);
        return cursor;
    }
}



-> Media Player

package com.example.atry;

import androidx.appcompat.app.AppCompatActivity;

import android.media.MediaPlayer;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.TextView;
import android.widget.Toast;

public class MainActivity extends AppCompatActivity {

    int stoptime = 0;
    int forwardtime = 5000;
    int backwardtime = 5000;
    MediaPlayer mediaPlayer,newMediaplayer;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        mediaPlayer = MediaPlayer.create(this,R.raw.trial);
        newMediaplayer = MediaPlayer.create(this,R.raw.trial);
        TextView name = findViewById(R.id.name1);
        name.setText("Announcement Video");

        Button play = findViewById(R.id.play);
        play.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                Toast.makeText(MainActivity.this, "Playing song", Toast.LENGTH_SHORT).show();
                mediaPlayer.start();
            }
        });

        Button pause = findViewById(R.id.pause);
        pause.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                Toast.makeText(MainActivity.this, "Paused", Toast.LENGTH_SHORT).show();
                mediaPlayer.pause();
            }
        });

        Button forward = findViewById(R.id.fast);
        forward.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                int curpos = mediaPlayer.getCurrentPosition();
                if((curpos + forwardtime ) <= (stoptime = mediaPlayer.getDuration()))
                {
                    mediaPlayer.seekTo(curpos + forwardtime);
                }
            }
        });

        Button rewind = findViewById(R.id.rewind);
        rewind.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                int curpos = mediaPlayer.getCurrentPosition();
                if((curpos - backwardtime) >= 0)
                {
                    mediaPlayer.seekTo(curpos - backwardtime);
                }
            }
        });

        Button stop = findViewById(R.id.s1);
        stop.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                Toast.makeText(MainActivity.this, "Stopped", Toast.LENGTH_SHORT).show();
                mediaPlayer.stop();
                mediaPlayer = newMediaplayer;
            }
        });

        Button restart = findViewById(R.id.r1);
        restart.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                Toast.makeText(MainActivity.this, "Restarting the Song", Toast.LENGTH_SHORT).show();
                mediaPlayer.seekTo(0);
                mediaPlayer.start();
            }
        });
    }
}


Part B -> Xylophone

import 'package:audioplayers/audioplayers.dart';
import 'package:flutter/material.dart';
// import 'package:audioplayers/src/audio_cache.dart';
// import 'pak'

void main() {
  runApp(MaterialApp(
    home: Scaffold(
      appBar: AppBar(title: Text("XYLOPHONE"),
      centerTitle: true,),
      body: XyloPage(),
    ),
  ));
}

class XyloPage extends StatefulWidget {
  const XyloPage({Key? key}) : super(key: key);

  @override
  State<XyloPage> createState() => _XyloPageState();
}

class _XyloPageState extends State<XyloPage> {
  
  void playSound(int notenumber)
  {
    final player = AudioCache();
    player.play('assets_note$notenumber.wav');
  }
  
  @override
  Widget build(BuildContext context) {
    return Column(
      crossAxisAlignment: CrossAxisAlignment.stretch,
      children: [
        Expanded(
          child: TextButton(
            style: TextButton.styleFrom(
              backgroundColor: Colors.indigo
            ),
            onPressed: () {
              playSound(1);
            },
            child: Text("First"),
          ),
        ),
        Expanded(
          child: TextButton(
            style: TextButton.styleFrom(
              backgroundColor: Colors.cyanAccent
            ),
            onPressed: () {
              playSound(2);
            },
            child: Text("Second"),
          ),
        ),
        Expanded(
            child: TextButton(
              style: TextButton.styleFrom(
                backgroundColor: Colors.green
              ),
              onPressed: () {
                playSound(3);
              },
              child: Text("Third"),
            )

        ),
        Expanded(
          child: TextButton(
            style: TextButton.styleFrom(
              backgroundColor: Colors.orange
            ),
            onPressed: () {
              playSound(3);
            },
            child: Text("Fourth"),
          ),
        ),
        Expanded(
          child: TextButton(
            style: TextButton.styleFrom(
                backgroundColor: Colors.orange
            ),
            onPressed: () {
              playSound(3);
            },
            child: Text("Five"),
          ),
        ),
        Expanded(
          child: TextButton(
            style: TextButton.styleFrom(
                backgroundColor: Colors.orange
            ),
            onPressed: () {
              playSound(3);
            },
            child: Text("Six"),
          ),
        ),
        Expanded(
          child: TextButton(
            style: TextButton.styleFrom(
                backgroundColor: Colors.orange
            ),
            onPressed: () {
              playSound(3);
            },
            child: Text("Seven"),
          ),
        ),


      ],

    );
  }
}





Part B -> Quiz

import 'package:flutter/material.dart';

void main() {
  runApp(const MaterialApp(
    home: SafeArea(
      child: Scaffold(
        body: quiz(),
      ),
    ),
  ));
}

class Question {
  final String questionText;
  final bool answer;
  Question({required this.questionText,required this.answer});
}

class Questions {
  List<Question> QuestionBank = [
  Question(questionText: "RainBow has 10 colors", answer: false),
  Question(questionText: "RainBow has 8 colors", answer: true),
  Question(questionText: "Mumbai is capital of India", answer: false),
  Question(questionText: "Delhi is capital of India", answer: true)
  ];
}


class quiz extends StatefulWidget {
  const quiz({Key? key}) : super(key: key);

  @override
  State<quiz> createState() => _quizState();
}

class _quizState extends State<quiz> {

  int questionnumber = 0;
  int currentscore = 0;
  Questions questions = Questions();

  void updatedQuestionNumber() {
    setState(() {
      questionnumber = questionnumber + 1;
      print("$questionnumber");
    });
  }

  void updatedcurrentscore(bool choice,int questionnumber) {
    if(questions.QuestionBank.length == questionnumber){
      print("End of all the Questions");
    }
    else
      {
        if(questions.QuestionBank[questionnumber].answer == choice)
          {
            setState(() {
              currentscore++;
            });
          }
      }
  }

  bool checkquestionnumber(int questionnumber) {
    return questionnumber < questions.QuestionBank.length ? true:false;
  }

  @override
  Widget build(BuildContext context) {
    return Container(
      child: Column(
        children: [
          Center(
            child: Text(checkquestionnumber(questionnumber) ? questions.QuestionBank[questionnumber].questionText.toString() : "End",
            style: const TextStyle(
              fontSize: 40.0
            ),),
          ),
          const SizedBox(height: 20.0,),
          if(checkquestionnumber(questionnumber))
            ElevatedButton(
                onPressed: () {
                  setState(() {
                    if(questionnumber == questions.QuestionBank.length){
                      print("End of the Questions");
                    }
                    else {
                      updatedcurrentscore(true, questionnumber);
                      updatedQuestionNumber();
                    }
                  });
                }
            , child: Text("True"),),
          SizedBox(width: 20.0,),
          if(checkquestionnumber(questionnumber))
            ElevatedButton(
              onPressed: () {
                setState(() {
                  if(questionnumber == questions.QuestionBank.length){
                    print("End of all the Questions");
                  }
                  else
                    {
                      updatedcurrentscore(false, questionnumber);
                      updatedQuestionNumber();
                    }
                });
              }
            , child: Text("False"),),
          SizedBox(height: 100.0,),
          SizedBox(height: 50.0,),
          Padding(
              padding: const EdgeInsets.all(30.0),
              child: Center(
                child: Text('${currentscore}' ,
                style: const  TextStyle(fontSize: 30.0),),
              ),
          )
        ],
      ),
    );
  }
}












